// Mocks generated by Mockito 5.4.4 from annotations
// in teste_smartfit/test/helpers/test_helpers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:dio/dio.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:teste_smartfit/core/network/dio_adapter.dart' as _i8;
import 'package:teste_smartfit/data/datasources/todo_remote_datasource.dart'
    as _i5;
import 'package:teste_smartfit/data/models/response_models/todo_list_response_model.dart'
    as _i2;
import 'package:teste_smartfit/data/models/response_models/todo_response_model.dart'
    as _i3;
import 'package:teste_smartfit/data/models/todo_model.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTodoListResponseModel_0 extends _i1.SmartFake
    implements _i2.TodoListResponseModel {
  _FakeTodoListResponseModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTodoResponseModel_1 extends _i1.SmartFake
    implements _i3.TodoResponseModel {
  _FakeTodoResponseModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDio_2 extends _i1.SmartFake implements _i4.Dio {
  _FakeDio_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TodoRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoRemoteDataSource extends _i1.Mock
    implements _i5.TodoRemoteDataSource {
  @override
  _i6.Future<_i2.TodoListResponseModel> getTodos(int? limit) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTodos,
          [limit],
        ),
        returnValue: _i6.Future<_i2.TodoListResponseModel>.value(
            _FakeTodoListResponseModel_0(
          this,
          Invocation.method(
            #getTodos,
            [limit],
          ),
        )),
        returnValueForMissingStub: _i6.Future<_i2.TodoListResponseModel>.value(
            _FakeTodoListResponseModel_0(
          this,
          Invocation.method(
            #getTodos,
            [limit],
          ),
        )),
      ) as _i6.Future<_i2.TodoListResponseModel>);

  @override
  _i6.Future<void> deleteTodo(int? todoId) => (super.noSuchMethod(
        Invocation.method(
          #deleteTodo,
          [todoId],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i3.TodoResponseModel> updateTodo(
    _i7.TodoModel? todo,
    int? todoId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTodo,
          [
            todo,
            todoId,
          ],
        ),
        returnValue:
            _i6.Future<_i3.TodoResponseModel>.value(_FakeTodoResponseModel_1(
          this,
          Invocation.method(
            #updateTodo,
            [
              todo,
              todoId,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.TodoResponseModel>.value(_FakeTodoResponseModel_1(
          this,
          Invocation.method(
            #updateTodo,
            [
              todo,
              todoId,
            ],
          ),
        )),
      ) as _i6.Future<_i3.TodoResponseModel>);

  @override
  _i6.Future<_i3.TodoResponseModel> createTodo(_i7.TodoModel? todo) =>
      (super.noSuchMethod(
        Invocation.method(
          #createTodo,
          [todo],
        ),
        returnValue:
            _i6.Future<_i3.TodoResponseModel>.value(_FakeTodoResponseModel_1(
          this,
          Invocation.method(
            #createTodo,
            [todo],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.TodoResponseModel>.value(_FakeTodoResponseModel_1(
          this,
          Invocation.method(
            #createTodo,
            [todo],
          ),
        )),
      ) as _i6.Future<_i3.TodoResponseModel>);
}

/// A class which mocks [DioAdapter].
///
/// See the documentation for Mockito's code generation for more information.
class MockDioAdapter extends _i1.Mock implements _i8.DioAdapter {
  @override
  _i4.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_2(
          this,
          Invocation.getter(#dio),
        ),
        returnValueForMissingStub: _FakeDio_2(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i4.Dio);

  @override
  _i6.Future<Map<String, dynamic>> get(
    String? uri, {
    Map<String, dynamic>? queryParameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [uri],
          {#queryParameters: queryParameters},
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i6.Future<Map<String, dynamic>> post(
    String? uri, {
    Map<String, dynamic>? data,
    Map<String, dynamic>? queryParameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [uri],
          {
            #data: data,
            #queryParameters: queryParameters,
          },
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i6.Future<Map<String, dynamic>> put(
    String? uri, {
    Map<String, dynamic>? data,
    Map<String, dynamic>? queryParameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [uri],
          {
            #data: data,
            #queryParameters: queryParameters,
          },
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i6.Future<Map<String, dynamic>> delete(
    String? uri, {
    Map<String, dynamic>? data,
    Map<String, dynamic>? queryParameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [uri],
          {
            #data: data,
            #queryParameters: queryParameters,
          },
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);
}
